name: .NET Core

on:
  push:
    branches: [ master ]
    tags: '**'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        source-url: https://nuget.pkg.github.com/mingxiaoyu/index.json
        dotnet-version: 2.2.401
      env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: |
        dotnet test --no-restore --verbosity normal
        echo "::set-output name=status::success"

    - name: Build solution and generate NuGet package
      if: steps.organize.outputs.status == 'success' && !cancelled()
      run: |  
        version=`git describe --tags`
        cd src/Mingxiaoyu.Microsoft.EntityFrameworkCore
        dotnet pack --output out --configuration Release  -p:Version=$version
        echo "::set-output name=status::success"

    - name: Push generated package to Nuget registry
      if: steps.organize.outputs.status == 'success' && !cancelled() && startsWith(github.ref, 'refs/tags/')
      run: dotnet nuget push src/Mingxiaoyu.Microsoft.EntityFrameworkCore/out/*.nupkg  -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json

    - name: Push generated package to GitHub registry
      if: steps.organize.outputs.status == 'success' && !cancelled() && startsWith(github.ref, 'refs/tags/')
      run: dotnet nuget push src/Mingxiaoyu.Microsoft.EntityFrameworkCore/out/*.nupkg
    
    - name: Create Release
      uses: actions/create-release@master
      if: steps.organize.outputs.status == 'success' && !cancelled() && startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

